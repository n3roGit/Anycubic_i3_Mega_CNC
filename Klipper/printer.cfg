[mcu]
serial: /dev/serial/by-id/usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 2000
max_accel_to_decel: 1000
max_z_velocity: 10
max_z_accel: 100
square_corner_velocity: 5

[stepper_x]
step_pin: PF0
dir_pin: !PF1
enable_pin: !PD7
microsteps: 16
rotation_distance: 40
endstop_pin: PF4
position_endstop: 220
position_min: 0
position_max: 220
homing_speed: 50
homing_positive_dir: True

[stepper_y]
step_pin: PF6
dir_pin: PF7
enable_pin: !PF2
microsteps: 16
rotation_distance: 40
endstop_pin: PF5
position_endstop: 209
position_min: 0
position_max: 209
homing_speed: 50
homing_positive_dir: True

[stepper_z]
step_pin: PL3
dir_pin: PL1
enable_pin: !PK0
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 8
endstop_pin: !PK1
position_endstop: -180
position_min: -180
position_max: 0
homing_speed: 20
homing_positive_dir: False

[output_pin spindle]
pin: PA0
pwm: True
cycle_time: 0.001
value: 0
shutdown_value: 0
maximum_mcu_duration: 5

[gcode_macro HOME_XY]
gcode:
    G28 X Y    # Home X and Y axes
    G90        # Absolute positioning
    G0 X5 Y5 F3000  # Move slightly away from the maximum position

[gcode_macro HOME_Z]
gcode:
    G90        # Absolute positioning
    G28 Z      # Home Z axis
    G0 Z5 F600 # Move Z up slightly after homing

[force_move]
enable_force_move: True

[gcode_arcs]
resolution: 0.1

[gcode_macro M3]
gcode:
    # Spindel im Uhrzeigersinn starten
    {% set S = params.S|default(0)|float %}
    # Begrenze die Geschwindigkeit auf sinnvolle Werte
    {% if S < 0 %}
        {% set S = 0 %}
    {% endif %}
    {% if S > 10000 %}
        {% set S = 10000 %}
    {% endif %}
    # Konvertiere Spindel-RPM zu PWM (0-1)
    {% set SPEED = S / 10000 %}
    SET_PIN PIN=spindle VALUE={SPEED}
    # Warte kurz bis die Spindel ihre Geschwindigkeit erreicht hat
    G4 P2.0  # 2 Sekunden Pause

[gcode_macro M4]
gcode:
    # Da wir keine Richtungsumkehr haben, behandeln wir M4 wie M3
    M3 S{params.S|default(0)|float}

[gcode_macro M5]
gcode:
    # Spindel stoppen
    SET_PIN PIN=spindle VALUE=0
    G4 P1.0  # 1 Sekunde warten bis Spindel ausgelaufen ist

[gcode_macro G43]
gcode:
    # Werkzeuglängenkorrektur
    # Hier müsste eine Werkzeugtabelle implementiert werden
    # H parameter spezifiziert Werkzeugnummer
    # Z parameter spezifiziert Werkzeuglänge
    {% set H = params.H|default(0)|int %}
    {% set Z = params.Z|default(0)|float %}

[gcode_macro M6]
gcode:
    # Werkzeugwechsel
    # T parameter spezifiziert neue Werkzeugnummer
    # Sollte:
    # 1. Spindel stoppen
    # 2. In sichere Z-Position fahren
    # 3. Zu Werkzeugwechselposition fahren
    # 4. Auf Bestätigung warten
    # 5. Neue Werkzeuglänge übernehmen
    M5  # Spindel stoppen
    G0 Z0 F600  # Z in sichere Position
    G0 X0 Y0 F3000  # Zu Werkzeugwechselposition

[gcode_macro G54]
gcode:
    # Erstes Werkstück-Koordinatensystem
    # Implementierung für Koordinatensystem-Offsets erforderlich

[gcode_macro G55]
gcode:
    # Zweites Werkstück-Koordinatensystem
    # Implementierung für Koordinatensystem-Offsets erforderlich

[gcode_macro G56]
gcode:
    # Drittes Werkstück-Koordinatensystem
    # Implementierung für Koordinatensystem-Offsets erforderlich

[gcode_macro M7]
gcode:
    # Nebenkühlung ein
    # Erfordert zusätzlichen Output-Pin für Kühlmittel

[gcode_macro M8]
gcode:
    # Hauptkühlung ein
    # Erfordert zusätzlichen Output-Pin für Kühlmittel

[gcode_macro M9]
gcode:
    # Alle Kühlungen aus
    # Schaltet alle Kühlmittel-Ausgänge ab

[gcode_macro G91.1]
gcode:
    # Inkrementelle IJ-Mode für Kreisbögen
    # Wichtig für manche CAM-Programme

[gcode_macro G90.1]
gcode:
    # Absolute IJ-Mode für Kreisbögen
    # Wichtig für manche CAM-Programme

[gcode_macro G61]
gcode:
    # Exakter Stopp-Modus
    # Für präzise Ecken

[gcode_macro G64]
gcode:
    # Konstante Geschwindigkeit
    # P parameter für Pfadtoleranz
    {% set P = params.P|default(0.02)|float %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={P}

[virtual_sdcard]
path: ~/gcode_files

[pause_resume]

[display_status]

[gcode_macro M600]
gcode:
    PAUSE_BASE
    G91
    G1 Z10 F600
    G90

[gcode_macro M601]
gcode:
    RESUME_BASE
    
[gcode_macro M602]
gcode:
    CANCEL_PRINT_BASE
