[mcu]
serial: /dev/serial/by-id/usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 2000
max_accel_to_decel: 1000
max_z_velocity: 10
max_z_accel: 100
square_corner_velocity: 5

[stepper_x]
step_pin: PF0
dir_pin: !PF1
enable_pin: !PD7
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PE5
position_endstop: 0
position_min: 0
position_max: 220
homing_speed: 50
homing_retract_dist: 5.0

[stepper_y]
step_pin: PF6
dir_pin: PF7
enable_pin: !PF2
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PL7
position_endstop: 0
position_min: 0
position_max: 209
homing_speed: 50
homing_positive_dir: False
homing_retract_dist: 5.0

[stepper_z]
; Beide Z-Treiber werden gemeinsam angesteuert – die Signale (Step, Dir, Enable)
; werden hardwareseitig an beide Treiber weitergegeben.
step_pin: PL3
dir_pin: PL1
enable_pin: !PK0
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 8
; Z-Endstop: Hier wird der Filament-Runout-Sensor als Z-Endstop genutzt.
; Für einen normally open (NO) Sensor: (internen Pullup aktivieren und invertieren)
; endstop_pin: ^!PD3 ; original PIN
endstop_pin: ^!PD2
; Falls dein Sensor normally closed (NC) arbeitet, ersetze diese Zeile durch:
; endstop_pin: ^PF3
position_endstop: 0
position_max: 200

[output_pin spindle]
pin: PA0
pwm: True
cycle_time: 0.001
value: 0
shutdown_value: 0
maximum_mcu_duration: 5

;---------------------------------------------------------------------------
; Da der Filament-Runout-Sensor als Z-Endstop genutzt wird, entfällt ein separater
; [filament_switch_sensor]-Abschnitt.

[gcode_macro HOME_XY]
gcode:
    G28 X Y
    G90
    G0 X5 Y5 F3000

[gcode_macro HOME_Z]
gcode:
    G90
    G28 Z
    G0 Z5 F600

[force_move]
enable_force_move: True

[gcode_arcs]
resolution: 0.1

[gcode_macro M3]
gcode:
    {% set S = params.S|default(0)|float %}
    {% if S < 0 %}{% set S = 0 %}{% endif %}
    {% if S > 10000 %}{% set S = 10000 %}{% endif %}
    {% set SPEED = S / 10000 %}
    SET_PIN PIN=spindle VALUE={SPEED}
    G4 P2.0

[gcode_macro M4]
gcode:
    M3 S{params.S|default(0)|float}

[gcode_macro M5]
gcode:
    SET_PIN PIN=spindle VALUE=0
    G4 P1.0

[gcode_macro G43]
gcode:
    {% set H = params.H|default(0)|int %}
    {% set Z = params.Z|default(0)|float %}

[gcode_macro M6]
gcode:
    M5
    G0 Z0 F600
    G0 X0 Y0 F3000

[gcode_macro G54]
gcode:

[gcode_macro G55]
gcode:

[gcode_macro G56]
gcode:

[gcode_macro M7]
gcode:

[gcode_macro M8]
gcode:

[gcode_macro M9]
gcode:

[gcode_macro G91.1]
gcode:

[gcode_macro G90.1]
gcode:

[gcode_macro G61]
gcode:

[gcode_macro G64]
gcode:
    {% set P = params.P|default(0.02)|float %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={P}

[virtual_sdcard]
path: ~/gcode_files

[pause_resume]

[display_status]

[gcode_macro M600]
gcode:
    PAUSE_BASE
    G91
    G1 Z10 F600
    G90

[gcode_macro M601]
gcode:
    RESUME_BASE

[gcode_macro M602]
gcode:
    CANCEL_PRINT_BASE

;---------------------------------------------------------------------------
; Makro PUMP_INPUTS zur Ausgabe der Endstop-Zustände (X, Y, Z)
[gcode_macro PUMP_INPUTS]
gcode:
    QUERY_ENDSTOPS


[gcode_macro TEST_INPUTS]
gcode:
    M400
    QUERY_ENDSTOPS
    QUERY_PIN PIN=PD2
    QUERY_PIN PIN=PD3
    QUERY_PIN PIN=PD4
    QUERY_PIN PIN=PD5
    QUERY_PIN PIN=PD6
    QUERY_PIN PIN=PD7
    QUERY_PIN PIN=PE4
    QUERY_PIN PIN=PE5
    QUERY_PIN PIN=PE6
    QUERY_PIN PIN=PF3
    QUERY_PIN PIN=PF4
    QUERY_PIN PIN=PF5

